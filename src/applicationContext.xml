<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<bean id="helloWorld" class="com.lr.HelloWorld">
		<property name="name" value="Spring"></property>
	</bean>
	
	<bean id="car1" class="com.lr.Car">
		<property name="name" value="audi"></property>
	</bean>
	
	<bean id="car2" class="com.lr.Car">
		<property name="name" value="baoma"></property>
	</bean>
	
	<bean id="person1" class="com.lr.Person">
		<property name="name" value="wangyi"></property>
		<property name="age" value="11"></property>
		<property name="car" ref="car1"></property><!-- 引用外部bean，ref -->
		<property name="cars">
			<map>
				<entry key="wangyi" value-ref="car1"/><!-- 注入map -->
			</map>
		</property>
		<property name="carList" ><!-- 注入list -->
			<list>
				<ref bean="car1"/>
				<bean class="com.lr.Car"><!-- 内部bean -->
					<property name="name" value="baoma"></property>
				</bean>
			</list>
		</property>
	</bean>
<!-- 构造器注入，莫名错误。 

	<bean id="person2" class="com.lr.Person" >
		<constructor-arg value="lr"></constructor-arg>
		<constructor-arg value="12"></constructor-arg>
		<constructor-arg ref="car1"></constructor-arg>
	</bean>
	
 -->
 
 <!-- p标签的使用，简化代码，要在namespaces中选中才能用 -->
	<bean id="person2" class="com.lr.Person" p:name="wanger" p:car-ref="car1">
		
	</bean>
	
<!-- util标签的使用，配置单例集合bean，以供多个bean进行引用同上 -->
	<util:list id="cars">
		<ref bean="car1"/>
	</util:list>
	
<!-- 继承 -->
	<bean id="person3" class="com.lr.Person" p:name="wangsan" parent="person2"></bean>

<!-- score 
	prototype:原型，每次调用 getBean 方法都会返回一个新的 bean. 且在第一次调用 getBean 方法时才创建实例
	singleton:单例的. 每次调用 getBean 方法都会返回同一个 bean. 且在 IOC 容器初始化时即创建 bean 的实例. 默认值 
-->
	<bean id="person4" class="com.lr.Person" scope="prototype"></bean>
	
<!-- SpEL表达式的使用 -->
	<bean id="person5" class="com.lr.Person" p:name="#{'wangwu'}" p:age="#{21}"
		p:car="#{car1}">
	</bean >
	
	<bean id="person6" class="com.lr.Person" p:name="#{'wangliu'}" p:age="#{22}"
		p:car="#{person5.age > 21 ? car1 : car2}">
	</bean >
</beans>
